建立了一个有向图，如下所示
顶点:
v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12
邻接矩阵：
0 7 ∞ ∞ ∞ 5 ∞ ∞ ∞ ∞ ∞ ∞ ∞
∞ 0 ∞ ∞ ∞ ∞ 9 ∞ ∞ ∞ ∞ ∞ ∞
2 ∞ 0 5 ∞ ∞ ∞ ∞ ∞ ∞ ∞ ∞ ∞
∞ ∞ ∞ 0 ∞ 6 ∞ ∞ ∞ ∞ ∞ ∞ ∞
∞ ∞ 7 2 0 ∞ ∞ ∞ ∞ ∞ ∞ ∞ ∞
∞ ∞ ∞ ∞ 3 0 ∞ ∞ ∞ ∞ ∞ ∞ ∞
4 ∞ ∞ ∞ 9 ∞ 0 ∞ ∞ 4 ∞ ∞ ∞
∞ ∞ ∞ ∞ ∞ ∞ 9 0 6 ∞ ∞ ∞ ∞
∞ ∞ ∞ ∞ ∞ ∞ ∞ 4 0 5 ∞ ∞ ∞
∞ ∞ ∞ ∞ ∞ ∞ ∞ ∞ ∞ 0 6 1 ∞
∞ ∞ ∞ ∞ ∞ ∞ ∞ ∞ ∞ ∞ 0 ∞ 8
∞ ∞ ∞ ∞ 4 ∞ ∞ ∞ ∞ ∞ ∞ 0 2
∞ ∞ ∞ ∞ ∞ ∞ ∞ ∞ ∞ 4 ∞ ∞ 0
------------------------------------------
第1题：单源最短路径的 Dijkstra 算法
设源点为 v0，其到其他顶点的最短路径长度和最短路径如下
v1: 长度: 7 路径: v0 —> v1
v2: 长度: 15 路径: v0 —> v5 —> v4 —> v2
v3: 长度: 10 路径: v0 —> v5 —> v4 —> v3
v4: 长度: 8 路径: v0 —> v5 —> v4
v5: 长度: 5 路径: v0 —> v5
v6: 长度: 16 路径: v0 —> v1 —> v6
v7: 路不存在
v8: 路不存在
v9: 长度: 20 路径: v0 —> v1 —> v6 —> v9
v10: 长度: 26 路径: v0 —> v1 —> v6 —> v9 —> v10
v11: 长度: 21 路径: v0 —> v1 —> v6 —> v9 —> v11
v12: 长度: 23 路径: v0 —> v1 —> v6 —> v9 —> v11 —> v12
------------------------------------------
第2题：全局最短路径的 Floyd-Warshall 算法
各顶点间的最短路径长度和最短路径如下
v0 —> v1: 长度: 7 路径: v0 —> v1
v0 —> v2: 长度: 15 路径: v0 —> v5 —> v4 —> v2
v0 —> v3: 长度: 10 路径: v0 —> v5 —> v4 —> v3
v0 —> v4: 长度: 8 路径: v0 —> v5 —> v4
v0 —> v5: 长度: 5 路径: v0 —> v5
v0 —> v6: 长度: 16 路径: v0 —> v1 —> v6
v0 —> v7: 路不存在
v0 —> v8: 路不存在
v0 —> v9: 长度: 20 路径: v0 —> v1 —> v6 —> v9
v0 —> v10: 长度: 26 路径: v0 —> v1 —> v6 —> v9 —> v10
v0 —> v11: 长度: 21 路径: v0 —> v1 —> v6 —> v9 —> v11
v0 —> v12: 长度: 23 路径: v0 —> v1 —> v6 —> v9 —> v11 —> v12
v1 —> v0: 长度: 13 路径: v1 —> v6 —> v0
v1 —> v2: 长度: 25 路径: v1 —> v6 —> v4 —> v2
v1 —> v3: 长度: 20 路径: v1 —> v6 —> v4 —> v3
v1 —> v4: 长度: 18 路径: v1 —> v6 —> v4
v1 —> v5: 长度: 18 路径: v1 —> v6 —> v0 —> v5
v1 —> v6: 长度: 9 路径: v1 —> v6
v1 —> v7: 路不存在
v1 —> v8: 路不存在
v1 —> v9: 长度: 13 路径: v1 —> v6 —> v9
v1 —> v10: 长度: 19 路径: v1 —> v6 —> v9 —> v10
v1 —> v11: 长度: 14 路径: v1 —> v6 —> v9 —> v11
v1 —> v12: 长度: 16 路径: v1 —> v6 —> v9 —> v11 —> v12
v2 —> v0: 长度: 2 路径: v2 —> v0
v2 —> v1: 长度: 9 路径: v2 —> v0 —> v1
v2 —> v3: 长度: 5 路径: v2 —> v3
v2 —> v4: 长度: 10 路径: v2 —> v0 —> v5 —> v4
v2 —> v5: 长度: 7 路径: v2 —> v0 —> v5
v2 —> v6: 长度: 18 路径: v2 —> v0 —> v1 —> v6
v2 —> v7: 路不存在
v2 —> v8: 路不存在
v2 —> v9: 长度: 22 路径: v2 —> v0 —> v1 —> v6 —> v9
v2 —> v10: 长度: 28 路径: v2 —> v0 —> v1 —> v6 —> v9 —> v10
v2 —> v11: 长度: 23 路径: v2 —> v0 —> v1 —> v6 —> v9 —> v11
v2 —> v12: 长度: 25 路径: v2 —> v0 —> v1 —> v6 —> v9 —> v11 —> v12
v3 —> v0: 长度: 18 路径: v3 —> v5 —> v4 —> v2 —> v0
v3 —> v1: 长度: 25 路径: v3 —> v5 —> v4 —> v2 —> v0 —> v1
v3 —> v2: 长度: 16 路径: v3 —> v5 —> v4 —> v2
v3 —> v4: 长度: 9 路径: v3 —> v5 —> v4
v3 —> v5: 长度: 6 路径: v3 —> v5
v3 —> v6: 长度: 34 路径: v3 —> v5 —> v4 —> v2 —> v0 —> v1 —> v6
v3 —> v7: 路不存在
v3 —> v8: 路不存在
v3 —> v9: 长度: 38 路径: v3 —> v5 —> v4 —> v2 —> v0 —> v1 —> v6 —> v9
v3 —> v10: 长度: 44 路径: v3 —> v5 —> v4 —> v2 —> v0 —> v1 —> v6 —> v9 —> v10
v3 —> v11: 长度: 39 路径: v3 —> v5 —> v4 —> v2 —> v0 —> v1 —> v6 —> v9 —> v11
v3 —> v12: 长度: 41 路径: v3 —> v5 —> v4 —> v2 —> v0 —> v1 —> v6 —> v9 —> v11 —> v12
v4 —> v0: 长度: 9 路径: v4 —> v2 —> v0
v4 —> v1: 长度: 16 路径: v4 —> v2 —> v0 —> v1
v4 —> v2: 长度: 7 路径: v4 —> v2
v4 —> v3: 长度: 2 路径: v4 —> v3
v4 —> v5: 长度: 8 路径: v4 —> v3 —> v5
v4 —> v6: 长度: 25 路径: v4 —> v2 —> v0 —> v1 —> v6
v4 —> v7: 路不存在
v4 —> v8: 路不存在
v4 —> v9: 长度: 29 路径: v4 —> v2 —> v0 —> v1 —> v6 —> v9
v4 —> v10: 长度: 35 路径: v4 —> v2 —> v0 —> v1 —> v6 —> v9 —> v10
v4 —> v11: 长度: 30 路径: v4 —> v2 —> v0 —> v1 —> v6 —> v9 —> v11
v4 —> v12: 长度: 32 路径: v4 —> v2 —> v0 —> v1 —> v6 —> v9 —> v11 —> v12
v5 —> v0: 长度: 12 路径: v5 —> v4 —> v2 —> v0
v5 —> v1: 长度: 19 路径: v5 —> v4 —> v2 —> v0 —> v1
v5 —> v2: 长度: 10 路径: v5 —> v4 —> v2
v5 —> v3: 长度: 5 路径: v5 —> v4 —> v3
v5 —> v4: 长度: 3 路径: v5 —> v4
v5 —> v6: 长度: 28 路径: v5 —> v4 —> v2 —> v0 —> v1 —> v6
v5 —> v7: 路不存在
v5 —> v8: 路不存在
v5 —> v9: 长度: 32 路径: v5 —> v4 —> v2 —> v0 —> v1 —> v6 —> v9
v5 —> v10: 长度: 38 路径: v5 —> v4 —> v2 —> v0 —> v1 —> v6 —> v9 —> v10
v5 —> v11: 长度: 33 路径: v5 —> v4 —> v2 —> v0 —> v1 —> v6 —> v9 —> v11
v5 —> v12: 长度: 35 路径: v5 —> v4 —> v2 —> v0 —> v1 —> v6 —> v9 —> v11 —> v12
v6 —> v0: 长度: 4 路径: v6 —> v0
v6 —> v1: 长度: 11 路径: v6 —> v0 —> v1
v6 —> v2: 长度: 16 路径: v6 —> v4 —> v2
v6 —> v3: 长度: 11 路径: v6 —> v4 —> v3
v6 —> v4: 长度: 9 路径: v6 —> v4
v6 —> v5: 长度: 9 路径: v6 —> v0 —> v5
v6 —> v7: 路不存在
v6 —> v8: 路不存在
v6 —> v9: 长度: 4 路径: v6 —> v9
v6 —> v10: 长度: 10 路径: v6 —> v9 —> v10
v6 —> v11: 长度: 5 路径: v6 —> v9 —> v11
v6 —> v12: 长度: 7 路径: v6 —> v9 —> v11 —> v12
v7 —> v0: 长度: 13 路径: v7 —> v6 —> v0
v7 —> v1: 长度: 20 路径: v7 —> v6 —> v0 —> v1
v7 —> v2: 长度: 23 路径: v7 —> v8 —> v9 —> v11 —> v4 —> v2
v7 —> v3: 长度: 18 路径: v7 —> v8 —> v9 —> v11 —> v4 —> v3
v7 —> v4: 长度: 16 路径: v7 —> v8 —> v9 —> v11 —> v4
v7 —> v5: 长度: 18 路径: v7 —> v6 —> v0 —> v5
v7 —> v6: 长度: 9 路径: v7 —> v6
v7 —> v8: 长度: 6 路径: v7 —> v8
v7 —> v9: 长度: 11 路径: v7 —> v8 —> v9
v7 —> v10: 长度: 17 路径: v7 —> v8 —> v9 —> v10
v7 —> v11: 长度: 12 路径: v7 —> v8 —> v9 —> v11
v7 —> v12: 长度: 14 路径: v7 —> v8 —> v9 —> v11 —> v12
v8 —> v0: 长度: 17 路径: v8 —> v7 —> v6 —> v0
v8 —> v1: 长度: 24 路径: v8 —> v7 —> v6 —> v0 —> v1
v8 —> v2: 长度: 17 路径: v8 —> v9 —> v11 —> v4 —> v2
v8 —> v3: 长度: 12 路径: v8 —> v9 —> v11 —> v4 —> v3
v8 —> v4: 长度: 10 路径: v8 —> v9 —> v11 —> v4
v8 —> v5: 长度: 18 路径: v8 —> v9 —> v11 —> v4 —> v3 —> v5
v8 —> v6: 长度: 13 路径: v8 —> v7 —> v6
v8 —> v7: 长度: 4 路径: v8 —> v7
v8 —> v9: 长度: 5 路径: v8 —> v9
v8 —> v10: 长度: 11 路径: v8 —> v9 —> v10
v8 —> v11: 长度: 6 路径: v8 —> v9 —> v11
v8 —> v12: 长度: 8 路径: v8 —> v9 —> v11 —> v12
v9 —> v0: 长度: 14 路径: v9 —> v11 —> v4 —> v2 —> v0
v9 —> v1: 长度: 21 路径: v9 —> v11 —> v4 —> v2 —> v0 —> v1
v9 —> v2: 长度: 12 路径: v9 —> v11 —> v4 —> v2
v9 —> v3: 长度: 7 路径: v9 —> v11 —> v4 —> v3
v9 —> v4: 长度: 5 路径: v9 —> v11 —> v4
v9 —> v5: 长度: 13 路径: v9 —> v11 —> v4 —> v3 —> v5
v9 —> v6: 长度: 30 路径: v9 —> v11 —> v4 —> v2 —> v0 —> v1 —> v6
v9 —> v7: 路不存在
v9 —> v8: 路不存在
v9 —> v10: 长度: 6 路径: v9 —> v10
v9 —> v11: 长度: 1 路径: v9 —> v11
v9 —> v12: 长度: 3 路径: v9 —> v11 —> v12
v10 —> v0: 长度: 26 路径: v10 —> v12 —> v9 —> v11 —> v4 —> v2 —> v0
v10 —> v1: 长度: 33 路径: v10 —> v12 —> v9 —> v11 —> v4 —> v2 —> v0 —> v1
v10 —> v2: 长度: 24 路径: v10 —> v12 —> v9 —> v11 —> v4 —> v2
v10 —> v3: 长度: 19 路径: v10 —> v12 —> v9 —> v11 —> v4 —> v3
v10 —> v4: 长度: 17 路径: v10 —> v12 —> v9 —> v11 —> v4
v10 —> v5: 长度: 25 路径: v10 —> v12 —> v9 —> v11 —> v4 —> v3 —> v5
v10 —> v6: 长度: 42 路径: v10 —> v12 —> v9 —> v11 —> v4 —> v2 —> v0 —> v1 —> v6
v10 —> v7: 路不存在
v10 —> v8: 路不存在
v10 —> v9: 长度: 12 路径: v10 —> v12 —> v9
v10 —> v11: 长度: 13 路径: v10 —> v12 —> v9 —> v11
v10 —> v12: 长度: 8 路径: v10 —> v12
v11 —> v0: 长度: 13 路径: v11 —> v4 —> v2 —> v0
v11 —> v1: 长度: 20 路径: v11 —> v4 —> v2 —> v0 —> v1
v11 —> v2: 长度: 11 路径: v11 —> v4 —> v2
v11 —> v3: 长度: 6 路径: v11 —> v4 —> v3
v11 —> v4: 长度: 4 路径: v11 —> v4
v11 —> v5: 长度: 12 路径: v11 —> v4 —> v3 —> v5
v11 —> v6: 长度: 29 路径: v11 —> v4 —> v2 —> v0 —> v1 —> v6
v11 —> v7: 路不存在
v11 —> v8: 路不存在
v11 —> v9: 长度: 6 路径: v11 —> v12 —> v9
v11 —> v10: 长度: 12 路径: v11 —> v12 —> v9 —> v10
v11 —> v12: 长度: 2 路径: v11 —> v12
v12 —> v0: 长度: 18 路径: v12 —> v9 —> v11 —> v4 —> v2 —> v0
v12 —> v1: 长度: 25 路径: v12 —> v9 —> v11 —> v4 —> v2 —> v0 —> v1
v12 —> v2: 长度: 16 路径: v12 —> v9 —> v11 —> v4 —> v2
v12 —> v3: 长度: 11 路径: v12 —> v9 —> v11 —> v4 —> v3
v12 —> v4: 长度: 9 路径: v12 —> v9 —> v11 —> v4
v12 —> v5: 长度: 17 路径: v12 —> v9 —> v11 —> v4 —> v3 —> v5
v12 —> v6: 长度: 34 路径: v12 —> v9 —> v11 —> v4 —> v2 —> v0 —> v1 —> v6
v12 —> v7: 路不存在
v12 —> v8: 路不存在
v12 —> v9: 长度: 4 路径: v12 —> v9
v12 —> v10: 长度: 10 路径: v12 —> v9 —> v10
v12 —> v11: 长度: 5 路径: v12 —> v9 —> v11
------------------------------------------
第3题：单目标最短路径问题，基于 Dijkstra 算法
设目标为 v6，其到其他顶点的最短路径长度和最短路径如下
v0: 长度: 16 路径: v0 —> v1 —> v6
v1: 长度: 9 路径: v1 —> v6
v2: 长度: 18 路径: v2 —> v0 —> v1 —> v6
v3: 长度: 34 路径: v3 —> v5 —> v4 —> v2 —> v0 —> v1 —> v6
v4: 长度: 25 路径: v4 —> v2 —> v0 —> v1 —> v6
v5: 长度: 28 路径: v5 —> v4 —> v2 —> v0 —> v1 —> v6
v7: 长度: 9 路径: v7 —> v6
v8: 长度: 13 路径: v8 —> v7 —> v6
v9: 长度: 30 路径: v9 —> v11 —> v4 —> v2 —> v0 —> v1 —> v6
v10: 长度: 42 路径: v10 —> v12 —> v9 —> v11 —> v4 —> v2 —> v0 —> v1 —> v6
v11: 长度: 29 路径: v11 —> v4 —> v2 —> v0 —> v1 —> v6
v12: 长度: 34 路径: v12 —> v9 —> v11 —> v4 —> v2 —> v0 —> v1 —> v6
------------------------------------------
第4题：单顶点对间最短路径问题，基于 Dijkstra 算法
以顶点对 v3, v10 为例，最短路径长度和最短路径如下
v3 —> v10: 长度: 44 路径: v3 —> v5 —> v4 —> v2 —> v0 —> v1 —> v6 —> v9 —> v10
v10 —> v3: 长度: 19 路径: v10 —> v12 —> v9 —> v11 —> v4 —> v3
------------------------------------------
第6题：实现 Warshall 算法，计算有向图的可达矩阵
可达矩阵如下
1 1 1 1 1 1 1 0 0 1 1 1 1
1 1 1 1 1 1 1 0 0 1 1 1 1
1 1 1 1 1 1 1 0 0 1 1 1 1
1 1 1 1 1 1 1 0 0 1 1 1 1
1 1 1 1 1 1 1 0 0 1 1 1 1
1 1 1 1 1 1 1 0 0 1 1 1 1
1 1 1 1 1 1 1 0 0 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 0 0 1 1 1 1
1 1 1 1 1 1 1 0 0 1 1 1 1
1 1 1 1 1 1 1 0 0 1 1 1 1
1 1 1 1 1 1 1 0 0 1 1 1 1
------------------------------------------
第7题：利用堆结构（优先级队列）改进和优化 Dijkstra 算法
设源点为 v0，其到其他顶点的最短路径长度和最短路径如下
v1: 长度: 7 路径: v0 —> v1
v2: 长度: 15 路径: v0 —> v5 —> v4 —> v2
v3: 长度: 10 路径: v0 —> v5 —> v4 —> v3
v4: 长度: 8 路径: v0 —> v5 —> v4
v5: 长度: 5 路径: v0 —> v5
v6: 长度: 16 路径: v0 —> v1 —> v6
v7: 路不存在
v8: 路不存在
v9: 长度: 20 路径: v0 —> v1 —> v6 —> v9
v10: 长度: 26 路径: v0 —> v1 —> v6 —> v9 —> v10
v11: 长度: 21 路径: v0 —> v1 —> v6 —> v9 —> v11
v12: 长度: 23 路径: v0 —> v1 —> v6 —> v9 —> v11 —> v12
测试组数：100000
优化前的运行时间：559ms
优化后的运行时间：345ms
